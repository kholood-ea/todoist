{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/project-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","index.js","App.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","projectid","onClick","onKeyDown","role","tabIndex","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userid","type","onChange","e","target","Header","darkMode","setDarkMode","setShouldShowMain","src","alt","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getCollatedTitle","length","getTitle","document","title","Content","render","darkModeDefault","getElementById"],"mappings":"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","file":"static/js/main.4ed2373d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAt6qwbyxMAFPtrdt-v7QgMciNHm5EJwLg\",\r\n  authDomain: \"todoist-6798c.firebaseapp.com\",\r\n  databaseURL: \"https://todoist-6798c.firebaseio.com\",\r\n  projectId: \"todoist-6798c\",\r\n  storageBucket: \"todoist-6798c.appspot.com\",\r\n  messagingSenderId: \"696475397060\",\r\n  appId: \"1:696475397060:web:f372f93fd4b7b5dd2dd291\",\r\n  measurementId: \"G-6RC2K1PRN8\"\r\n});\r\n\r\nexport { firebaseConfig as firebase };\r\n","export const collatedTasks = [\r\n  { key: \"INBOX\", name: \"Inbox\" },\r\n  { key: \"TODAY\", name: \"Today\" },\r\n  { key: \"NEXT_7\", name: \"Next 7 Days\" }\r\n];\r\n","import { collatedTasks } from \"../constants\";\r\n\r\nexport const getTitle = (projects, projectid) =>\r\n  projects.find(project => project.projectid === projectid);\r\n\r\nexport const getCollatedTitle = (projects, key) =>\r\n  projects.find(project => project.key === key);\r\n\r\nexport const collatedTasksExist = selectedProject =>\r\n  collatedTasks.find(task => task.key === selectedProject);\r\n\r\nexport const generatePushId = (() => {\r\n  const PUSH_CHARS =\r\n    \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";\r\n\r\n  const lastRandChars = [];\r\n\r\n  return function() {\r\n    let now = new Date().getTime();\r\n\r\n    const timeStampChars = new Array(8);\r\n    for (var i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n      now = Math.floor(now / 64);\r\n    }\r\n\r\n    let id = timeStampChars.join(\"\");\r\n\r\n    for (i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n\r\n    return id;\r\n  };\r\n})();\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { useProjects } from \"../hooks\";\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsProvider = ({ children }) => {\r\n  const { projects, setProjects } = useProjects();\r\n  return (\r\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\r\n      {children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\nexport const useProjectsValue = () => useContext(ProjectsContext);\r\n","import { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../firebase\";\r\nimport { collatedTasksExist } from \"../helpers\";\r\nimport moment from \"moment\";\r\n\r\nexport const useTasks = selectedProject => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"userid\", \"==\", \"112233\");\r\n\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where(\"projectid\", \"==\", selectedProject))\r\n        : selectedProject === \"TODAY\"\r\n        ? (unsubscribe = unsubscribe.where(\r\n            \"date\",\r\n            \"==\",\r\n            moment().format(\"DD/MM/YYYY\")\r\n          ))\r\n        : selectedProject === \"INBOX\" || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where(\"date\", \"==\", \"\"))\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n      const newTasks = snapshot.docs.map(task => ({\r\n        id: task.id,\r\n        ...task.data()\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === \"NEXT_7\"\r\n          ? newTasks.filter(\r\n              task =>\r\n                moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter(task => task.archived !== true)\r\n      );\r\n\r\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [selectedProject]);\r\n\r\n  return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .where(\"userid\", \"==\", \"112233\")\r\n      .orderBy(\"projectid\")\r\n      .get()\r\n      .then(snapshot => {\r\n        const allProjects = snapshot.docs.map(project => ({\r\n          ...project.data(),\r\n          docId: project.id\r\n        }));\r\n\r\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n          setProjects(allProjects);\r\n        }\r\n      });\r\n  }, [projects]);\r\n\r\n  return { projects, setProjects };\r\n};\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({ children }) => {\r\n  const [selectedProject, setSelectedProject] = useState(\"INBOX\");\r\n  return (\r\n    <SelectedProjectContext.Provider\r\n      value={{ selectedProject, setSelectedProject }}\r\n    >\r\n      {children}\r\n    </SelectedProjectContext.Provider>\r\n  );\r\n};\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n","import React from 'react';\r\nimport { useProjectsValue } from \"../context\";\r\n\r\nexport const ProjectOverlay = ({\r\n    setProject,\r\n    showProjectOverlay,\r\n    setShowProjectOverlay }) => {\r\n    const { projects } = useProjectsValue()\r\n    return (\r\n        projects && showProjectOverlay && (\r\n            <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n                <ul className=\"project-overlay__list\">\r\n                    {projects.map(project => (\r\n                        <li key={project.projectid}\r\n                        >\r\n                            <div\r\n                                data-testid=\"project-overlay-action\"\r\n                                onClick={() => {\r\n                                    setProject(project.projectid);\r\n                                    setShowProjectOverlay(false)\r\n                                }}\r\n                                onKeyDown={() => {\r\n                                    setProject(project.projectid);\r\n                                    setShowProjectOverlay(false)\r\n                                }}\r\n                                role=\"button\"\r\n                                tabIndex={0}\r\n                                aria-label=\"Select the task project\"\r\n\r\n                            >\r\n                                {project.name}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\r\n\r\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\r\n    showTaskDate && (\r\n        <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n            <ul className=\"task-date__list\">\r\n                <li>\r\n                    <div\r\n\r\n                        onClick={() => {\r\n                            setShowTaskDate(false);\r\n                            setTaskDate(moment().format('DD/MM/YYYY'));\r\n\r\n                        }}\r\n                        onKeyDown={() => {\r\n                            setShowTaskDate(false);\r\n                            setTaskDate(moment().format('DD/MM/YYYY'));\r\n\r\n                        }}\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                        aria-label=\"Select today as the task date\"\r\n                        data-testid=\"task-date-today\"\r\n                    >\r\n                        <span>\r\n                            <FaSpaceShuttle />\r\n                        </span>\r\n                        <span> Today</span>\r\n                    </div>\r\n                </li>\r\n\r\n                <li>\r\n                    <div\r\n                        data-testid=\"task-date-tomorrow\"\r\n                        onClick={() => {\r\n                            setShowTaskDate(false);\r\n                            setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n                        }}\r\n                        onKeyDown={() => {\r\n                            setShowTaskDate(false);\r\n                            setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n                        }}\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        aria-label=\"Select tomorrow as the task date\"\r\n\r\n                    >\r\n                        <span>\r\n                            <FaSun />\r\n                        </span>\r\n                        <span> Tomorrow</span>\r\n                    </div>\r\n                </li>\r\n\r\n                <li >\r\n                    <div\r\n                        data-testid=\"task-date-next-week\"\r\n                        onClick={() => {\r\n                            setShowTaskDate(false);\r\n                            setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\r\n                        }}\r\n                        onKeyDown={() => {\r\n                            setShowTaskDate(false);\r\n                            setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\r\n                        }}\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        aria-label=\"Select next week as the task date\"\r\n\r\n                    >\r\n                        <span>\r\n                            <FaRegPaperPlane />\r\n                        </span>\r\n                        <span>Next week </span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n","import React, { useState } from 'react';\r\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport { firebase } from '../firebase';\r\nimport { useSelectedProjectValue } from '../context';\r\nimport { ProjectOverlay } from './ProjectOverlay';\r\nimport { TaskDate } from './TaskDate';\r\n\r\nexport const AddTask = ({\r\n    showAddTaskMain = true,\r\n    shouldShowMain = false,\r\n    showQuickAddTask,\r\n    setShowQuickAddTask,\r\n}) => {\r\n    const [task, setTask] = useState('');\r\n    const [taskDate, setTaskDate] = useState('');\r\n    const [project, setProject] = useState('');\r\n    const [showMain, setShowMain] = useState(shouldShowMain);\r\n    const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n    const [showTaskDate, setShowTaskDate] = useState(false);\r\n\r\n    const { selectedProject } = useSelectedProjectValue();\r\n\r\n    const addTask = () => {\r\n        const projectId = project || selectedProject;\r\n        let collatedDate = '';\r\n\r\n        if (projectId === 'TODAY') {\r\n            collatedDate = moment().format('DD/MM/YYYY');\r\n        } else if (projectId === 'NEXT_7') {\r\n            collatedDate = moment()\r\n                .add(7, 'days')\r\n                .format('DD/MM/YYYY');\r\n        }\r\n\r\n        return (\r\n            task &&\r\n            projectId &&\r\n            firebase\r\n                .firestore()\r\n                .collection('tasks')\r\n                .add({\r\n                    archived: false,\r\n                    projectid: projectId,\r\n                    task,\r\n                    date: collatedDate || taskDate,\r\n                    userid: '112233',\r\n                })\r\n                .then(() => {\r\n                    setTask('');\r\n                    setProject('');\r\n                    setShowMain('');\r\n                    setShowProjectOverlay(false);\r\n                })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\r\n            data-testid=\"add-task-comp\"\r\n        >\r\n            {showAddTaskMain && (\r\n                <div\r\n                    className=\"add-task__shallow\"\r\n                    data-testid=\"show-main-action\"\r\n                    onClick={() => setShowMain(!showMain)}\r\n                    onKeyDown={() => setShowMain(!showMain)}\r\n                    tabIndex={0}\r\n                    aria-label=\"Add task\"\r\n                    role=\"button\"\r\n                >\r\n                    <span className=\"add-task__plus\">+</span>\r\n                    <span className=\"add-task__text\">Add Task</span>\r\n                </div>\r\n            )}\r\n\r\n            {(showMain || showQuickAddTask) && (\r\n                <div className=\"add-task__main\" data-testid=\"add-task-main\">\r\n                    {showQuickAddTask && (\r\n                        <>\r\n                            <div data-testid=\"quick-add-task\">\r\n                                <h2 className=\"header\">Quick Add Task</h2>\r\n                                <span\r\n                                    className=\"add-task__cancel-x\"\r\n                                    data-testid=\"add-task-quick-cancel\"\r\n                                    aria-label=\"Cancel adding task\"\r\n                                    onClick={() => {\r\n                                        setShowMain(false);\r\n                                        setShowProjectOverlay(false);\r\n                                        setShowQuickAddTask(false);\r\n                                    }}\r\n                                    onKeyDown={() => {\r\n                                        setShowMain(false);\r\n                                        setShowProjectOverlay(false);\r\n                                        setShowQuickAddTask(false);\r\n                                    }}\r\n                                    tabIndex={0}\r\n                                    role=\"button\"\r\n                                >\r\n                                    X\r\n                </span>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <ProjectOverlay\r\n                        setProject={setProject}\r\n                        showProjectOverlay={showProjectOverlay}\r\n                        setShowProjectOverlay={setShowProjectOverlay}\r\n                    />\r\n                    <TaskDate\r\n                        setTaskDate={setTaskDate}\r\n                        showTaskDate={showTaskDate}\r\n                        setShowTaskDate={setShowTaskDate}\r\n                    />\r\n                    <input\r\n                        className=\"add-task__content\"\r\n                        aria-label=\"Enter your task\"\r\n                        data-testid=\"add-task-content\"\r\n                        type=\"text\"\r\n                        value={task}\r\n                        onChange={e => setTask(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"add-task__submit\"\r\n                        data-testid=\"add-task\"\r\n                        onClick={() =>\r\n                            showQuickAddTask\r\n                                ? addTask() && setShowQuickAddTask(false)\r\n                                : addTask()\r\n                        }\r\n                    >\r\n                        Add Task\r\n          </button>\r\n                    {!showQuickAddTask && (\r\n                        <span\r\n                            className=\"add-task__cancel\"\r\n                            data-testid=\"add-task-main-cancel\"\r\n                            onClick={() => {\r\n                                setShowMain(false);\r\n                                setShowProjectOverlay(false);\r\n                            }}\r\n                            onKeyDown={() => {\r\n                                setShowMain(false);\r\n                                setShowProjectOverlay(false);\r\n                            }}\r\n                            aria-label=\"Cancel adding a task\"\r\n                            tabIndex={0}\r\n                            role=\"button\"\r\n                        >\r\n                            Cancel\r\n            </span>\r\n                    )}\r\n                    <span\r\n                        className=\"add-task__project\"\r\n                        data-testid=\"show-project-overlay\"\r\n                        onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n                        onKeyDown={() => setShowProjectOverlay(!showProjectOverlay)}\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                    >\r\n                        <FaRegListAlt />\r\n                    </span>\r\n                    <span\r\n                        className=\"add-task__date\"\r\n                        data-testid=\"show-task-date-overlay\"\r\n                        onClick={() => setShowTaskDate(!showTaskDate)}\r\n                        onKeyDown={() => setShowTaskDate(!showTaskDate)}\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                    >\r\n                        <FaRegCalendarAlt />\r\n                    </span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport { FaPizzaSlice } from \"react-icons/fa\";\r\nimport { AddTask } from \"../AddTask\";\r\nexport const Header = ({ darkMode, setDarkMode }) => {\r\n\r\n  const [shouldShowMain, setShouldShowMain] = useState(false)\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false)\r\n  return (\r\n    <header className=\"header\" data-testid=\"header\">\r\n      <nav>\r\n        <div className=\"logo\">\r\n          <img\r\n            src=\"https://raw.githubusercontent.com/karlhadwen/todoist/master/public/images/logo.png\"\r\n            alt=\"Todoist\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"settings\">\r\n          <ul>\r\n            <li className=\"settings__add\">\r\n              <button\r\n                data-testid=\"quick-add-task-action\"\r\n                aria-label=\"Quick add task\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowQuickAddTask(true);\r\n                  setShouldShowMain(true);\r\n                }}\r\n                onKeyDown={() => {\r\n                  setShowQuickAddTask(true);\r\n                  setShouldShowMain(true);\r\n                }}> +\r\n              </button>\r\n            </li>\r\n            <li\r\n              className=\"settings__darkmode\">\r\n              <button\r\n                data-testid=\"dark-mode-action\"\r\n                aria-label=\"Darkmode on/off\"\r\n                type=\"button\"\r\n                onClick={() => setDarkMode(!darkMode)}\r\n                onKeyDown={() => setDarkMode(!darkMode)}>\r\n                <FaPizzaSlice />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <AddTask showAddTaskMain={false}\r\n        shouldShowMain={shouldShowMain}\r\n        showQuickAddTask={showQuickAddTask}\r\n        setShowQuickAddTask={setShowQuickAddTask} />\r\n    </header >\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { useProjectsValue, useSelectedProjectValue } from \"../context\";\r\nimport { firebase } from \"../firebase\";\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { projects, setProjects } = useProjectsValue();\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n  const deleteProject = docId => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .doc(docId)\r\n      .delete()\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setSelectedProject(\"INBOX\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <span className=\"sidebar__dot\">•</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n      <span\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => setShowConfirm(!showConfirm)}\r\n        onKeyDown={() => setShowConfirm(!showConfirm)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        aria-label=\"Confirm deletion of project\"\r\n\r\n      >\r\n        <FaTrashAlt />\r\n        {showConfirm && (\r\n          <div className=\"project-delete-model\">\r\n            <div className=\"project-delete-model__inner\">\r\n              <p> Are you sure you want to delete this project</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => deleteProject(project.docId)}\r\n              >\r\n                Delete\r\n                </button>\r\n              <span onClick={() => setShowConfirm(!showConfirm)}\r\n                onKeyDown={() => setShowConfirm(!showConfirm)}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-label=\"Cancel adding project, do not delete\"\r\n\r\n              >\r\n                Cancel\r\n                </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n}; \r\n","import React, { useState } from \"react\";\r\nimport { useProjectsValue, useSelectedProjectValue } from \"../context\";\r\nimport { IndividualProject } from \"./IndividualProject\";\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  return (\r\n    projects &&\r\n    projects.map(project => (\r\n      <li\r\n        key={project.projectid}\r\n        data-doc-id={project.docId}\r\n        data-testid=\"project-action-parent\"\r\n        className={\r\n          active === project.projectid\r\n            ? \"active sidebar__project\"\r\n            : \"sidebar__project\"\r\n        }\r\n      >\r\n        <div\r\n          data-testid=\"project-action\"\r\n          role=\"button\"\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          tabIndex={0}\r\n          onKeyDown={() => {\r\n            setActive(project.projectid);\r\n            setSelectedProject(project.projectid);\r\n          }}\r\n          onClick={() => {\r\n            setActive(project.projectid);\r\n            setSelectedProject(project.projectid);\r\n          }}\r\n        >\r\n          <IndividualProject project={project} />\r\n        </div>\r\n        {/* {(\"project\", JSON.stringify(project))} */}\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { firebase } from '../firebase'\r\nimport { generatePushId } from \"../helpers\";\r\nimport { useProjectsValue } from \"../context\";\r\n\r\nexport const AddProject = ({ shouldShow = false }) => {\r\n    const [show, setShow] = useState(shouldShow);\r\n    const [projectName, setProjectName] = useState('');\r\n    const projectId = generatePushId();\r\n    const { setProjects } = useProjectsValue();\r\n\r\n    const addProject = () =>\r\n        projectName &&\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .add({\r\n                projectid: projectId,\r\n                name: projectName,\r\n                userid: '112233'\r\n            })\r\n            .then(() => {\r\n                setProjects([]);\r\n                setProjectName('');\r\n                setShow(false);\r\n            })\r\n    return (\r\n        <div className=\"add-project\" data-testid=\"add-project\">\r\n            {show && (\r\n                <div className=\"add-project__input\">\r\n                    <input value={projectName}\r\n                        onChange={e => setProjectName(e.target.value)}\r\n                        className=\"add-project__name\"\r\n                        data-testid=\"add-project-inner\"\r\n                        type=\"text\"\r\n                        placeholder=\"Name your project\" />\r\n                    <button className=\"add-project__submit\"\r\n                        type=\"button\"\r\n                        onClick={() => addProject()}>\r\n                        Add project\r\n                </button>\r\n                    <span data-testid=\"hide-project-overlay\"\r\n                        aria-label=\"Cancel adding project \"\r\n                        className=\"add-project__cancel\"\r\n                        onClick={() => setShow(false)}\r\n                        onKeyDown={() => setShow(false)}\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n\r\n                    >Cancel</span>\r\n                </div>\r\n\r\n            )}\r\n            <span className=\"add-project__plus\">+</span>\r\n            <span aria-label=\"Add project\" data-testid=\"add-project-action\" className=\"add-project__text\"\r\n                onClick={() => setShow(!show)}\r\n                onKeyDown={() => setShow(!show)}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n\r\n            >\r\n                Add Project\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { Projects } from \"../Projects\";\r\nimport {\r\n  FaInbox,\r\n  FaChevronDown,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar\r\n} from \"react-icons/fa\";\r\nimport { useSelectedProjectValue } from \"../../context\";\r\nimport { AddProject } from \"../AddProject\";\r\n\r\nexport const Sidebar = () => {\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const [active, setActive] = useState(\"inbox\");\r\n  const [showProjects, setShowProjects] = useState(true);\r\n\r\n  return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n      <ul className=\"sidebar__generic\">\r\n        <li\r\n          className={active === \"inbox\" ? \"active\" : undefined}\r\n          data-testid=\"inbox\"\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            aria-label=\"Show inbox tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaInbox />\r\n            </span>\r\n            <span>Inbox</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          className={active === \"today\" ? \"active\" : undefined}\r\n          data-testid=\"today\"\r\n        >\r\n          <div\r\n            data-testid=\"today-action\"\r\n            aria-label=\"Show today's tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendar />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          className={active === \"next_7\" ? \"active\" : undefined}\r\n          data-testid=\"next_7\"\r\n        >\r\n          <div\r\n            data-testid=\"next_7-action\"\r\n            aria-label=\"Show tasks for the next 7 days\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendarAlt />\r\n            </span>\r\n            <span>Next 7 days</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        className=\"sidebar__middle\"\r\n        aria-label=\"Show/hide projects\"\r\n        onClick={() => setShowProjects(!showProjects)}\r\n        onKeyDown={() => setShowProjects(!showProjects)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <span>\r\n          <FaChevronDown\r\n            className={!showProjects ? \"hidden-projects\" : undefined}\r\n          />\r\n        </span>\r\n        <h2>Projects</h2>\r\n      </div>\r\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\r\n      {showProjects && <AddProject />}\r\n      {/* {showProjects && <Projects />} */}\r\n    </div>\r\n  );\r\n};\r\n","import { firebase } from \"../firebase\";\r\nimport React from \"react\";\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .doc(id)\r\n      .update({ archived: true });\r\n  };\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={() => archiveTask()}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      aria-label={`Mark ${taskDesc} as done? `}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Checkbox } from \"./Checkbox\";\r\nimport { useTasks } from \"../hooks\";\r\nimport { collatedTasks } from \"../constants\";\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from \"../helpers\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\nimport { AddTask } from \"./AddTask\";\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = \"\";\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  if (\r\n    projects &&\r\n    projects.length > 0 &&\r\n    selectedProject &&\r\n    !collatedTasksExist(selectedProject)\r\n  ) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map(task => (\r\n          <li key={'${task.id}'}>\r\n            <Checkbox id={task.id} taskDesc={task.task} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sidebar } from \"./Sidebar\";\r\nimport { Tasks } from \"../Tasks\";\r\n\r\nexport const Content = () => (\r\n  <section className=\"content\">\r\n    <Sidebar />\r\n    <Tasks />\r\n  </section>\r\n);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport \"./App.scss\";\r\nrender(<App />, document.getElementById(\"root\"));\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Header } from \"./components/layout/Header\";\r\nimport { Content } from \"./components/layout/Content\";\r\nimport { ProjectsProvider, SelectedProjectProvider } from \"./context\";\r\n\r\nexport const App = ({ darkModeDefault = false }) => {\r\n\r\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\r\n\r\n  return (\r\n    <SelectedProjectProvider>\r\n      <ProjectsProvider>\r\n        <main data-testid=\"application\"\r\n          className={darkMode ? 'darkmode' : undefined}>\r\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\r\n          <Content />\r\n        </main >\r\n      </ProjectsProvider>\r\n    </SelectedProjectProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}